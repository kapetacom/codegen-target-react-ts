{{#include-proxy-route}}
//#FILENAME:src/server/.generated/routes.ts:write-always
import {Router} from "express";
import {ConfigProvider} from "@kapeta/sdk-config";
import { ProxyRouteOptions } from "@kapeta/sdk-proxy-route";

{{#consumers-of-type 'kapeta/resource-type-rest-client'}}
    import { create{{type metadata.name}}Router } from './proxies/rest/{{type metadata.name}}-routes';
{{/consumers-of-type}}
{{#consumers-of-type 'kapeta/resource-type-web-fragment'}}
    import { create{{type metadata.name}}Router } from './proxies/fragments/{{type metadata.name}}-routes';
{{/consumers-of-type}}

export const createRoutes = async (config:ConfigProvider, opts:ProxyRouteOptions = {}):Promise<Router> => {
    const routes = Router();
    {{#consumers-of-type 'kapeta/resource-type-rest-client'}}
        routes.use(await create{{type metadata.name}}Router(config, opts));
    {{/consumers-of-type}}
    {{#consumers-of-type 'kapeta/resource-type-web-fragment'}}
        routes.use(await create{{type metadata.name}}Router(config, opts));
    {{/consumers-of-type}}
    return routes;
};

{{/include-proxy-route}}