#FILENAME:src/browser/screens/SignupScreen.tsx:write-never
{{ai-type 'web-screen'}}
{{#ai-comment}}
    This is a screen component that allows users to sign up to the application.

    Suggested route: /signup
{{/ai-comment}}
import React, { useState, useCallback } from 'react';
import { Container, TextField, Button, Typography, Link as MuiLink, Grid } from '@mui/material';
import { Link as RouterLink } from 'react-router-dom';

{{> helpers/dsl-imports.hbs}}

export const SignupScreen: React.FC = () => {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');

    /**
     * STORM-AI: Add constants for the API client hooks
     */

    const handleSubmit: React.FormEventHandler = useCallback((event) => {
        event.preventDefault();
        /**
         * STORM-AI: Use the right API client and call the right method that registers the user
         */
    }, []);

    {{#raw}}
    return (
         <Container
            component="main"
            maxWidth="xs"
            sx=&#123;\{
                display: 'flex',
                flexDirection: 'column',
                alignItems: 'flex-start',
                justifyContent: 'center',
                height: '100vh',
                bgcolor: 'background.paper',
            }}
        >
            <Typography component="h1" variant="h5">
                Sign Up
            </Typography>

            <Typography variant="body2" sx=&#123;\{ fontSize: '0.875rem', marginBottom: 2, color: 'text.disabled' }}>
                Get started for free
            </Typography>

            <form onSubmit={handleSubmit} style={{ width: '100%' }}>
                <TextField
                    variant="outlined"
                    margin="normal"
                    required
                    fullWidth
                    id="email"
                    label="Email Address"
                    name="email"
                    autoComplete="email"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                />

                <TextField
                    variant="outlined"
                    margin="normal"
                    required
                    fullWidth
                    name="password"
                    label="Password"
                    type="password"
                    id="password"
                    autoComplete="new-password"
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                />

                <Button type="submit" fullWidth variant="contained" color="primary" size="large" sx=&#123;\{ mt: 2, mb: 2 }}>
                    Sign Up
                </Button>
            </form>

            <Grid container justifyContent="flex-start">
                <Grid item>
                    <MuiLink component={RouterLink} to="/login" variant="body2">
                        Login
                    </MuiLink>
                </Grid>
            </Grid>
        </Container>
    );
    {{/raw}}
};