//#FILENAME:src/server/index.js:write-always
//
// GENERATED SOURCE - DO NOT EDIT
//
const Path = require('path');
const FS = require('fs');
const Server = require('@kapeta/sdk-server');
const server = new Server('{{data.metadata.name}}', Path.resolve(__dirname, '../..'));
const express = require('express');

{{#consumers-of-type 'kapeta/resource-type-rest-client'}}
const {{type metadata.name}}ClientRoute = require('./api/{{type metadata.name}}ClientRoute');
{{/consumers-of-type}}
{{#consumers-of-type 'kapeta/resource-type-web-fragment'}}
    const {{type metadata.name}}ProxyRoute = require('./proxies/fragments/{{type metadata.name}}ProxyRoute');
{{/consumers-of-type}}

const devMode = process.env.NODE_ENV &&
                process.env.NODE_ENV.toLowerCase() === 'development';

if (devMode) {
    console.log('Serving development version');
    const webpack = require('webpack');
    const webpackDevMiddleware = require('webpack-dev-middleware');
    const config = require('../../webpack.development.config');
    const compiler = webpack(config);

    server.express().use('/', webpackDevMiddleware(compiler, {
        publicPath: '/'
    }));

    server.express().use(require("webpack-hot-middleware")(compiler));
} else {
    console.log('Serving production version');

    const BASE_DIR = Path.resolve(__dirname, '../../dist');
    if (!FS.existsSync(BASE_DIR)) {
        console.error('Distribution folder (%s) is missing - did you remember to build before running?', BASE_DIR);
        process.exit(1);
    }

    server.express().use(express.static(BASE_DIR));
}

{{#consumers-of-type 'kapeta/resource-type-web-fragment'}}
    server.addRoute(
        new {{type metadata.name}}ProxyRoute()
    );
{{/consumers-of-type}}

{{#consumers-of-type 'kapeta/resource-type-rest-client'}}
    server.addRoute(
        new {{type metadata.name}}ClientRoute()
    );
{{/consumers-of-type}}

server.start('web');